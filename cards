package main

import "fmt"

func main() {

	// newdeck, This function creates a new batch 
	// of cards each time it is called


	//An array is required in which each element 
	//represents a card from the game

    //For each function we define, we must define a task

    //We need a function that can print cards, we name it print

	//The function we use for the mixing property is called shuffle

	//To select a set of cards, we use the deal function

    //We select a variable of type string and assign a value to it
	//The name of this variable is card


	var card.string = "Ace of spades"

	//Easy way to define variables 
	//cards :="Ace of spades"
	//colon equal

	fmt.Println(card)

	//We want to define a function that assigns different strings
	// to a variable because we have 52 cards

	func Newcard () string {

		
    card := Newcard ()

	//In line 6, we change the variable from one mode to 
	//several modes with this command card := Newcard
	
	//About the definition of the Newcard function :
	//Go asks us to state very clearly what kind of data to return from each function
	//We told the compiler to consider a certain string type whenever a new card is called.

	return "five of diamonds"

	}

	//If we did not write the last command, return : While saving the file, it shows us an error that you 
	//have written a function that does not return any data
	//error: No result value excepted  or  error: too many arguments to reurn, have (string) and want()
	//In low-level languages, it must be clear what the function returns
	//The second error says there are too many arguments to return while the string is empty.

	



